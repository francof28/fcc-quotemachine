{"version":3,"sources":["colorsArray.js","QuoteBox.js","App.js","reportWebVitals.js","index.js"],"names":["COLORS_ARRAY","QuoteBox","props","state","rand","Math","floor","random","quotes","text","autor","color","changeQuote","bind","rand1","this","setState","id","style","backgroundColor","href","icon","faTwitter","onClick","React","Component","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yRAWeA,G,MAXM,CACjB,UACA,UACA,UACA,UACA,UACA,UACA,UACA,Y,uBC8CWC,E,kDA/CX,WAAYC,GAAO,IAAD,8BACd,cAAMA,IACDC,MAAQ,CACTC,KAAOC,KAAKC,MAAM,EAAED,KAAKE,UACzBC,OAAQ,CACJ,CAACC,KAAM,4FAA0FC,MAAO,cACxG,CAACD,KAAM,4EAA0EC,MAAO,kBACxF,CAACD,KAAM,gGAAyFC,MAAO,aACvG,CAACD,KAAM,6IAA2IC,MAAO,YACzJ,CAACD,KAAM,gEAAiEC,MAAO,mBAEnFC,MAAQ,UAEZ,EAAKC,YAAc,EAAKA,YAAYC,KAAjB,gBAbL,E,+CAgBlB,WACI,IAAIC,EAAQC,KAAKZ,MAAMC,KACvBW,KAAKC,SAAS,CACVZ,KAAMC,KAAKC,MAAM,EAAED,KAAKE,UACxBI,MAAOX,EAAaK,KAAKC,MAAM,EAAED,KAAKE,aAEvCO,IAAUC,KAAKZ,MAAMC,MACpBW,KAAKC,SAAS,CACVZ,KAAMC,KAAKC,MAAM,EAAED,KAAKE,c,oBAKpC,WACI,OACI,sBAAKU,GAAG,YAAYC,MAAO,CAACC,gBAAiBJ,KAAKZ,MAAMQ,OAAxD,UACI,qBAAKM,GAAG,OAAR,SACI,kCAAKF,KAAKZ,MAAMK,OAAOO,KAAKZ,MAAMC,MAAMK,KAAxC,UAEJ,qBAAKQ,GAAG,SAAR,SACI,mCAAMF,KAAKZ,MAAMK,OAAOO,KAAKZ,MAAMC,MAAMM,WAE7C,mBAAGO,GAAG,cACNG,KAAI,oDAA+CL,KAAKZ,MAAMK,OAAOO,KAAKZ,MAAMC,MAAMK,KAAlF,iCACDM,KAAKZ,MAAMK,OAAOO,KAAKZ,MAAMC,MAAMM,OAFtC,SAE+C,cAAC,IAAD,CAAiBW,KAAMC,QACtE,wBAAQL,GAAG,YAAYM,QAASR,KAAKH,YAArC,gC,GA1COY,IAAMC,WCkBdC,E,kDAnBb,WAAYxB,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,GAFI,E,0CAKnB,WACE,OACE,qBAAKwB,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACA,cAAC,EAAD,IACA,mBAAGA,UAAU,OAAb,mC,GAXUH,IAAMC,WCQTG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.f0a11985.chunk.js","sourcesContent":["const COLORS_ARRAY = [ \r\n    '#ffadad',\r\n    '#ffd6a5',\r\n    '#fdffb6',\r\n    '#caffbf',\r\n    '#9bf6ff',\r\n    '#a0c4ff',\r\n    '#ffc6ff',\r\n    '#fffffc'\r\n];\r\n\r\nexport default COLORS_ARRAY;","import React from 'react';\r\nimport './QuoteBox.css';\r\nimport COLORS_ARRAY from './colorsArray';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTwitter } from '@fortawesome/free-brands-svg-icons';\r\n\r\nclass QuoteBox extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            rand : Math.floor(5*Math.random()),\r\n            quotes: [\r\n                {text: \"Hay que tener cuidado al elegir a los enemigos porque uno termina pareciéndose a ellos\", autor: \"J.L Borges\"},\r\n                {text: \"Cada vez sospecho más que estar de acuerdo es la peor de las ilusiones\", autor: \"J. Cortázar\"},\r\n                {text: \"Si amas a alguien, díselo… muchos corazones se rompen por palabras que no se escuchan\", autor: \"P. Coelho\"},\r\n                {text: \"La juventud es feliz porque tiene la capacidad de ver la belleza. Cualquiera que conserve la capacidad de ver la belleza jamás envejece\", autor: \"F. Kafka\"},\r\n                {text: \"The fault, dear Brutus, is not in our stars, but in ourselves\", autor: \"W. Shakespeare\"}\r\n            ],\r\n            color : 'ffadad'\r\n        }\r\n        this.changeQuote = this.changeQuote.bind(this)\r\n    }\r\n\r\n    changeQuote () {\r\n        let rand1 = this.state.rand;\r\n        this.setState({\r\n            rand: Math.floor(5*Math.random()),\r\n            color: COLORS_ARRAY[Math.floor(8*Math.random())]\r\n        })\r\n        if(rand1 === this.state.rand){\r\n            this.setState({\r\n                rand: Math.floor(5*Math.random())\r\n            })\r\n        }\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div id=\"quote-box\" style={{backgroundColor: this.state.color}}>\r\n                <div id=\"text\">\r\n                    <p>\"{this.state.quotes[this.state.rand].text}.\"</p>\r\n                </div>\r\n                <div id=\"author\">\r\n                    <p>- {this.state.quotes[this.state.rand].autor}</p>\r\n                </div>\r\n                <a id=\"tweet-quote\" \r\n                href={`http://www.twitter.com/intent/tweet?text=\"${this.state.quotes[this.state.rand].text}.\" \r\n                -${this.state.quotes[this.state.rand].autor}`}><FontAwesomeIcon icon={faTwitter} /></a>\r\n                <button id=\"new-quote\" onClick={this.changeQuote}>Nueva Frase</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default QuoteBox;","import './App.css';\nimport React from 'react';\nimport QuoteBox from './QuoteBox';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {}\n  }\n\n  render () {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n        <QuoteBox />  \n        <p className=\"Cred\">\n            by francof28\n        </p>\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}